

//following the the very common mixins 

// create a pusodo element 
@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

// usage : @include pseudo;


  @mixin clearfix {
    &:after {
      content: "";
      display: table;
      clear: both;
    }
  }

  @mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity = $opacity-ie); //IE8
  }

  @mixin font-size($size, $base: 16) {
    font-size: $size+px; // fallback for old browsers
    font-size: ($size / $base) * 1rem;
  }
  @mixin line-height($size, $base: 16) {
    line-height: $size+px; // fallback for old browsers
    line-height: ($size / $base) * 1rem;
  }


  @mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
    @if $vendors {
      @each $vendor in $vendors {
        #{"-" + $vendor + "-" + $property}: #{$value};
      }
    }
    @if $default {
      #{$property}: #{$value};
    }
  }



  @mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
    @font-face {
      font-family: quote($font-name);
      src: url($file-name + '.eot');
      src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
      url($file-name + '.woff') format('woff'),
      url($file-name + '.ttf')  format('truetype'),
      url($file-name + '.svg##{$font-name}')  format('svg');
      font-weight: $weight;
      font-style: $style;
    }
  }

 

@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin flex-space-between($align){ 
  display: flex;
  justify-content: space-between;
  align-items: $align;
}



